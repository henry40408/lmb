[package]
name = "lmb"
version = "0.1.0"
edition = "2024"
rust-version = "1.85.0"

[dependencies]
aes = "0.8.4"
anyhow = "1.0.98"
axum = { version = "0.8.4", features = ["http2"] }
base16ct = { version = "0.3.0", features = ["alloc"] }
base64 = "0.22.1"
bat = { version = "0.25.0", default-features = false }
bon = "3.8.1"
byte-unit = "5.1.6"
bytes = "1.10.1"
cbc = { version = "0.1.2", features = ["alloc"] }
clap = { version = "4.5.41", features = ["derive", "env"] }
clio = { version = "0.3.5", features = ["clap-parse"] }
crc32fast = "1.5.0"
crypto-common = "0.1.6"
dashmap = "6.1.0"
deadpool = "0.12.3"
des = "0.8.1"
ecb = "0.1.2"
futures = "0.3.31"
hex = "0.4.3"
hmac = "0.12.1"
jiff = { version = "0.2.15", default-features = false, features = ["std"] }
lazy-regex = "3.4.1"
md-5 = "0.10.6"
miette = { version = "7.6.0", features = ["fancy", "syntect-highlighter"] }
mlua = { version = "0.11.1", features = [
    "async",
    "luau",
    "error-send",
    "serde",
    "send",
    "vendored",
] }
no_color = "0.2.0"
parking_lot = "0.12.4"
reqwest = { version = "0.12.22", default-features = false, features = [
    "charset",
    "http2",
    "rustls-tls",
    "system-proxy",
] }
rmp-serde = "1.3.0"
rusqlite = { version = "0.37.0", features = ["bundled"] }
serde = "1.0.226"
serde_json = "1.0.141"
serde_json_path = "0.7.2"
serde_yaml = "0.9.34"
sha1 = "0.10.6"
sha2 = "0.10.9"
string-offsets = "0.2.0"
thiserror = "2.0.12"
tokio = { version = "1.47.0", default-features = false, features = [
    "fs",
    "io-std",
    "io-util",
    "macros",
    "rt-multi-thread",
] }
toml = "0.9.4"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
url = "2.5.4"

[dev-dependencies]
axum-test = "18.0.2"
criterion = { version = "0.7.0", features = ["async_tokio"] }
curl-parser = "0.6.0"
full_moon = "2.0.0"
mockito = "1.7.0"
pulldown-cmark = "0.13.0"
snapbox = { version = "0.6.21", features = ["cmd"] }
test-case = "3.3.1"

[profile.release]
codegen-units = 1
lto = true
opt-level = "z"
# Panic unwinding is needed in release mode to trace errors
# other than runtime errors from the Lua virtual machine,
# so it is intentional not to enable abort mode on panic.
# https://github.com/mlua-rs/mlua/issues/350#issuecomment-1870522709
#panic = "abort"
strip = true

[[bench]]
name = "bench"
harness = false

# https://github.com/EmbarkStudios/rust-ecosystem/blob/732513edfd9172f4eda358b2d0cefc6cad1585ee/lints.rs
[lints.rust]
future_incompatible = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
unexpected_cfgs = "deny"
unsafe_code = "deny"

[lints.clippy]
all = { level = "warn", priority = -1 }

# mlua allows Arc on non-Send/Sync types
arc_with_non_send_sync = "allow"

# Performance of tokio::sync::Mutex is way worse than parking_lot::Mutex
await_holding_lock = "allow"

char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
unwrap_used = "deny"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"
